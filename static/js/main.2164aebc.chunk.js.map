{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","aria-labelledby","placeholder","onClick","toggleMode","defaultChecked","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2164aebc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dropdown\r\n              </a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                <li><hr className=\"dropdown-divider\" /></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\" href=\"/\">Disabled</a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form>\r\n          <div className={`form-check form-switch mx-3 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" onClick={props.toggleMode} defaultChecked />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Enable {props.mode === 'light' ? 'dark' : 'light'} Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'set title here',\r\n  aboutText: 'About text here'\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"uppercase was clicked\");\r\n        if(text.length > 0){\r\n            let newText = text.toUpperCase();\r\n            setText(newText);\r\n            props.showAlert(\"Converted to uppercase\", \"success\");\r\n        }\r\n        else{\r\n            props.showAlert(\"Please Enter text\", \"danger\");\r\n        }\r\n    }\r\n    const handleLowClick = () => {\r\n        // console.log(\"lowercase was clicked\");\r\n        if(text.length > 0){\r\n            let newText = text.toLowerCase();\r\n            setText(newText);\r\n            props.showAlert(\"Converted to lowercase\", \"success\");\r\n        }\r\n        else{\r\n            props.showAlert(\"Please Enter text\", \"danger\");\r\n        }\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCLearText = () => {\r\n        // console.log(\"text cleared\");\r\n        if(text.length > 0){\r\n            setText(\"\");\r\n            props.showAlert(\"Text cleared\", \"danger\");\r\n        }\r\n        else{\r\n            props.showAlert(\"Please Enter text\", \"danger\");\r\n        }\r\n    }\r\n    const handleCopy = () => {\r\n        // console.log(\"I am a Copy\");\r\n        if(text.length > 0){\r\n            let text = document.getElementById(\"mybox\");\r\n            text.select();\r\n            navigator.clipboard.writeText(text.value);\r\n            props.showAlert(\"Text copied\", \"primary\");\r\n        }\r\n        else{\r\n            props.showAlert(\"Please Enter text\", \"danger\");\r\n        }\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        if(text.length > 0){\r\n            let newText = text.split(/[ ]+/);\r\n            setText(newText.join(\" \"));\r\n            props.showAlert(\"Extra spaces removed\", \"primary\");\r\n        }\r\n        else{\r\n            props.showAlert(\"Please Enter text\", \"danger\");\r\n        }\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" id=\"mybox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary m-3\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary m-3\" onClick={handleLowClick}>Convert to LoweCase</button>\r\n                <button className=\"btn btn-primary m-3\" onClick={handleCLearText}>Clear TextArea</button>\r\n                <button className=\"btn btn-primary m-3\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary m-3\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-4\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n            </div>\r\n            <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n                <h1>Preview</h1>\r\n                <p>{text.length > 0 ? text : 'Enter something in the textbox to preview it here'}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //weather dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* // <Router> */}\n      <Navbar title=\"TextUtils\" aboutText=\"about TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert} />\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      </>\n    // {/* </Router> */}\n  );\n}\n\nexport default App;\n// N: 309\n// X: 16\n// T: 12\n// R: 20","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}